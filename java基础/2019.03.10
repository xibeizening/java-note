1、程序流程分为
   顺序结构
   判断语句（三种）
   if(关系表达式){
      代码块；
   }//首先判断条件是否为真，若为true则执行代码块，若为false则直接结束。
   
   if(关系表达式){
      代码块1；
   }else {
      代码块2；
   }//首先判断条件是否为真，若为true则执行代码块，若为false则执行代码块2。
   
   if(关系表达式1){
      代码块1；
   }else if(关系表达式2){
      代码块2；
   }
   ...
   else if(关系表达式n){
      代码块n；
   }else{
      代码块n+1;
   }//首先判断关系表达式1看其结果是否为真，若为真则执行代码块1并且结束代码，若为false则往下执行，判断执行同理。
 
   选择语句（switch语句用来写星期）
   switch(表达式) {
      case 常量值1:
        语句体;
        break;
      case 常量值1:
        语句体;
        break;
      ...
      defult:
        语句体n+1;
        break;
   }//首先计算出表达式的值，其次，和case依次比较一旦有对应的值，就会执行相应的语句，在执行过程中，遇到break就会结束，最后如果所有case的值和表达式的值都不匹配，就会执行default语句体部分，然后结束程序。
   注意事项：多个case后面的数值不可以重复。
            switch后面小括号当中只能是下列数据类型：
                  基本数据类型：byte/shaort/char/int。
                  引用数据类型:String字符串、enum枚举。
            switch语句格式可以很灵活：前后顺序可以颠倒，而且可以省略break语句可以省略。
            “（具有穿透效果）匹配哪一个case就从哪一个位置向下执行，直到遇到了break或者整体结束为止。 ”
   循环语句（三种）:满足循环条件的情况下，反复执行某一段代码，直到条件为false时，结束循环。
   
   for(初始化表达式①;布尔表达式②;步进表达式④){
      循环体③
   }//执行顺序为①②③④;
   注意事项：for循环的变量只能在循环内部使用。while和do...while的初始化变量本来就在外面，循环结束后还可以使用。
   
   while循环:
   初始化表达式①
   while(布尔表达式②){
         循环体③
         步进语句④
   }//执行顺序为①②③④；
   
   do...while循环:
   初始化表达式①
   do{
      循环体;③
      步进语句④；
   } while (布尔表达式②);//执行顺序为①③④②;
   
2、循环控制语句
      break关键字的用法有常见的两种：
         可以用在switch语句当中，一旦执行，整个switch语句立刻结束。
         还可以用在循环语句当中，一旦执行，整个循环语句立刻结束，打断循环。
         循环建议：凡是确定的场景多用for循环，否则用while循环。
      另一种循环控制语句是continue关键字，一旦执行，立刻跳过当前循环剩余内容，马上开始下一次循环。
      死循环的标准格式：
      while(true){
         循环体
      }
3、循环嵌套：是指循环的循环体是另一个循环。比如for循环里面还有一个for循环，就是嵌套循环，循环次数等于外循环次数*内循环次数。
 
      
